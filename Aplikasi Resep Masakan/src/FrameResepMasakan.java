import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Pongo
 */
public class FrameResepMasakan extends javax.swing.JFrame {

    /**
     * Creates new form FrameResepMasakan
     */
    public FrameResepMasakan() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtWaktu = new javax.swing.JTextField();
        txtPorsi = new javax.swing.JTextField();
        txtDitulis = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtBahan = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCara = new javax.swing.JTextArea();
        cmbKategori = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabelResep = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 204, 153));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nama Resep  ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Kategori Resep");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Bahan-Bahan ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Cara Membuat");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Waktu Memasak  ");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Porsi  ");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Ditulis Oleh  ");

        txtWaktu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtPorsi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPorsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPorsiActionPerformed(evt);
            }
        });

        txtDitulis.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtNama.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtBahan.setColumns(20);
        txtBahan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBahan.setRows(5);
        jScrollPane1.setViewportView(txtBahan);

        txtCara.setColumns(20);
        txtCara.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCara.setRows(5);
        jScrollPane2.setViewportView(txtCara);

        cmbKategori.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Makanan Utama", "Makanan Penutup", "Minuman Cemilan" }));

        TabelResep.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TabelResep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Resep", "Ketegori Resep", "Bahan-Bahan", "Cara Membuat", "Waktu Memasak", "Porsi", "Ditulis Oleh"
            }
        ));
        jScrollPane3.setViewportView(TabelResep);

        btnSimpan.setBackground(new java.awt.Color(102, 153, 255));
        btnSimpan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSimpan.setText("Simpan Resep");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(102, 153, 255));
        btnHapus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnHapus.setText("Hapus Resep");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnBatal.setBackground(new java.awt.Color(102, 153, 255));
        btnBatal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        btnUbah.setBackground(new java.awt.Color(102, 153, 255));
        btnUbah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUbah.setText("Ubah Resep");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnKeluar.setBackground(new java.awt.Color(255, 51, 51));
        btnKeluar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        btnImport.setBackground(new java.awt.Color(153, 255, 153));
        btnImport.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnImport.setText("Impor Resep");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnExport.setBackground(new java.awt.Color(153, 255, 153));
        btnExport.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnExport.setText("Ekspor Resep");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPorsi)
                    .addComponent(txtDitulis)
                    .addComponent(txtWaktu)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(cmbKategori, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNama))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addGap(4, 4, 4)
                        .addComponent(btnBatal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUbah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExport)
                        .addGap(10, 10, 10)
                        .addComponent(btnImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnKeluar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtWaktu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtPorsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtDitulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHapus)
                            .addComponent(btnBatal)
                            .addComponent(btnUbah)
                            .addComponent(btnExport)
                            .addComponent(btnSimpan)
                            .addComponent(btnKeluar)
                            .addComponent(btnImport))))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(255, 51, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("APLIKASI RESEP MASAKAN");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPorsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPorsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPorsiActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        DefaultTableModel model = (DefaultTableModel) TabelResep.getModel(); // Mengambil model dari tabel yang ditampilkan
        int selectedRow = TabelResep.getSelectedRow(); // Mendapatkan indeks baris yang saat ini dipilih oleh pengguna

        // Memeriksa apakah ada baris yang dipilih
        if (selectedRow != -1) { // Memastikan bahwa pengguna telah memilih baris yang valid
            model.removeRow(selectedRow); // Menghapus baris yang dipilih dari model tabel
            JOptionPane.showMessageDialog(null, "Resep berhasil dihapus."); // Menampilkan pesan sukses setelah penghapusan
        } else {
            JOptionPane.showMessageDialog(null, "Pilih resep yang ingin dihapus."); // Menampilkan pesan kesalahan jika tidak ada baris yang dipilih
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        batal();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        System.exit(0); //Menutup aplikasi
        // TODO add your handling code here:
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        JFileChooser fileChooser = new JFileChooser(); // Membuat instance JFileChooser untuk memilih lokasi dan nama file untuk menyimpan
        fileChooser.setDialogTitle("Simpan File Resep"); // Mengatur judul dialog untuk menyimpan file
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Text Files", "txt")); // Mengatur filter untuk hanya menampilkan file dengan ekstensi .txt
        int result = fileChooser.showSaveDialog(null); // Menampilkan dialog untuk menyimpan file dan menyimpan hasilnya dalam variabel result
        if (result == JFileChooser.APPROVE_OPTION) { // Memeriksa apakah pengguna menekan tombol "OK" untuk menyimpan file
            File file = fileChooser.getSelectedFile(); // Mendapatkan file yang dipilih oleh pengguna
            if (!file.getName().endsWith(".txt")) { // Memeriksa apakah nama file tidak diakhiri dengan .txt
                file = new File(file.getAbsolutePath() + ".txt"); // Menambahkan .txt ke nama file jika tidak ada
            }
            try (FileOutputStream fos = new FileOutputStream(file)) { // Menggunakan try-with-resources untuk memastikan FileOutputStream ditutup secara otomatis
                DefaultTableModel model = (DefaultTableModel) TabelResep.getModel(); // Mengambil model dari tabel resep
                for (int i = 0; i < model.getRowCount(); i++) { // Mengiterasi setiap baris di model tabel
                    StringBuilder row = new StringBuilder(); // Menggunakan StringBuilder untuk efisiensi dalam membangun string
                    for (int j = 0; j < model.getColumnCount(); j++) { // Mengiterasi setiap kolom di baris
                        row.append(model.getValueAt(i, j).toString().replace("\n", " ")) // Mengganti newline dengan spasi
                           .append("\t"); // Menambahkan tab sebagai pemisah antar kolom
                    }
                    fos.write((row.toString().trim() + "\n").getBytes()); // Menulis baris ke file, trim untuk menghilangkan spasi di akhir
                }
                JOptionPane.showMessageDialog(null, "Data Resep Berhasil Diekspor ke File Teks!"); // Menampilkan pesan sukses setelah data berhasil diekspor
            } catch (IOException ex) { // Menangani kesalahan jika terjadi IOException
                JOptionPane.showMessageDialog(null, "Terjadi Kesalahan: " + ex.getMessage()); // Menampilkan pesan kesalahan
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // Mengambil model dari tabel yang ditampilkan
        DefaultTableModel model = (DefaultTableModel) TabelResep.getModel(); // Mendapatkan model tabel dari TabelResep

        // Mendapatkan indeks baris yang saat ini dipilih oleh pengguna
        int selectedRow = TabelResep.getSelectedRow(); // Mengambil indeks baris yang dipilih

        // Memeriksa apakah ada baris yang dipilih
        if (selectedRow != -1) { // Memeriksa apakah indeks yang dipilih valid (tidak -1)
            txtNama.setText(model.getValueAt(selectedRow, 0).toString()); // Mengisi field txtNama dengan nilai dari kolom pertama
            cmbKategori.setSelectedItem(model.getValueAt(selectedRow, 1).toString()); // Mengatur item terpilih di cmbKategori dengan nilai dari kolom kedua
            txtBahan.setText(model.getValueAt(selectedRow, 2).toString()); // Mengisi field txtBahan dengan nilai dari kolom ketiga
            txtCara.setText(model.getValueAt(selectedRow, 3).toString()); // Mengisi field txtCara dengan nilai dari kolom keempat
            txtWaktu.setText(model.getValueAt(selectedRow, 4).toString()); // Mengisi field txtWaktu dengan nilai dari kolom kelima
            txtPorsi.setText(model.getValueAt(selectedRow, 5).toString()); // Mengisi field txtPorsi dengan nilai dari kolom keenam
            txtDitulis.setText(model.getValueAt(selectedRow, 6).toString()); // Mengisi field txtDitulis dengan nilai dari kolom ketujuh

            // Menampilkan pesan dialog untuk memberi tahu pengguna bahwa mereka dapat mengedit data
            JOptionPane.showMessageDialog(null, "Edit data sesuai kebutuhan, lalu klik Simpan."); 
        } else {
            // Menampilkan pesan kesalahan jika tidak ada baris yang dipilih
            JOptionPane.showMessageDialog(null, "Pilih resep yang ingin diedit."); 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // Mengambil model dari tabel resep
        DefaultTableModel model = (DefaultTableModel) TabelResep.getModel();
        // Mengambil indeks baris yang sedang dipilih
        int selectedRow = TabelResep.getSelectedRow(); 

        // Validasi input untuk memastikan semua kolom diisi
        boolean isInputValid = !txtNama.getText().trim().isEmpty() && // Memeriksa nama
                               cmbKategori.getSelectedItem() != null && // Memeriksa kategori
                               !cmbKategori.getSelectedItem().toString().isEmpty() && // Memeriksa kategori tidak kosong
                               !txtBahan.getText().trim().isEmpty() && // Memeriksa bahan
                               !txtCara.getText().trim().isEmpty() && // Memeriksa cara
                               !txtWaktu.getText().trim().isEmpty() && // Memeriksa waktu
                               !txtPorsi.getText().trim().isEmpty() && // Memeriksa porsi
                               !txtDitulis.getText().trim().isEmpty(); // Memeriksa yang ditulis

        // Jika input tidak valid, tampilkan pesan kesalahan
        if (!isInputValid) {
            JOptionPane.showMessageDialog(null, "Semua kolom harus diisi!");
            return; // Keluar dari fungsi jika ada kolom yang kosong
        }

        // Mengambil nilai dari input untuk digunakan dalam pembaruan atau penambahan
        String nama = txtNama.getText(); // Mengambil nama resep
        String kategori = cmbKategori.getSelectedItem().toString(); // Mengambil kategori resep
        String bahan = txtBahan.getText(); // Mengambil bahan resep
        String cara = txtCara.getText(); // Mengambil cara pembuatan resep
        String waktu = txtWaktu.getText(); // Mengambil waktu pembuatan resep
        String porsi = txtPorsi.getText(); // Mengambil porsi resep
        String ditulis = txtDitulis.getText(); // Mengambil nama penulis resep

        // Memeriksa apakah ada baris yang dipilih untuk diperbarui
        if (selectedRow != -1) {
            // Jika ada, perbarui data di baris yang dipilih
            model.setValueAt(nama, selectedRow, 0); // Memperbarui nama
            model.setValueAt(kategori, selectedRow, 1); // Memperbarui kategori
            model.setValueAt(bahan, selectedRow, 2); // Memperbarui bahan
            model.setValueAt(cara, selectedRow, 3); // Memperbarui cara
            model.setValueAt(waktu, selectedRow, 4); // Memperbarui waktu
            model.setValueAt(porsi, selectedRow, 5); // Memperbarui porsi
            model.setValueAt(ditulis, selectedRow, 6); // Memperbarui nama penulis
            // Menampilkan pesan bahwa resep berhasil diperbarui
            JOptionPane.showMessageDialog(null, "Resep berhasil diperbarui!");
        } else {
            // Jika tidak ada baris yang dipilih, tambahkan baris baru ke tabel
            model.addRow(new Object[]{nama, kategori, bahan, cara, waktu, porsi, ditulis});
            // Menampilkan pesan bahwa resep berhasil ditambahkan
            JOptionPane.showMessageDialog(null, "Resep berhasil ditambahkan!");
        }

        // Panggil fungsi batal untuk mereset input setelah selesai
        batal();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        JFileChooser fileChooser = new JFileChooser(); // Membuat instance JFileChooser untuk memilih file yang akan diimpor
        fileChooser.setDialogTitle("Buka File Resep"); // Mengatur judul dialog untuk membuka file
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Text Files", "txt")); // Mengatur filter untuk hanya menampilkan file dengan ekstensi .txt
        int result = fileChooser.showOpenDialog(null); // Menampilkan dialog untuk membuka file dan menyimpan hasilnya dalam variabel result
        if (result == JFileChooser.APPROVE_OPTION) { // Memeriksa apakah pengguna menekan tombol "OK" untuk membuka file
            File file = fileChooser.getSelectedFile(); // Mendapatkan file yang dipilih oleh pengguna
            try (FileInputStream fis = new FileInputStream(file)) { // Menggunakan try-with-resources untuk memastikan FileInputStream ditutup secara otomatis
                DefaultTableModel model = (DefaultTableModel) TabelResep.getModel(); // Mengambil model dari tabel resep
                byte[] data = fis.readAllBytes(); // Membaca semua byte dari file
                String content = new String(data); // Mengonversi byte menjadi string
                String[] rows = content.split("\n"); // Memisahkan konten menjadi baris berdasarkan newline
                for (String row : rows) { // Mengiterasi setiap baris yang dipisahkan
                    if (!row.trim().isEmpty()) { // Memastikan baris tidak kosong setelah di-trim
                        String[] columns = row.split("\t"); // Memisahkan kolom menggunakan tab sebagai pemisah
                        model.addRow(columns); // Menambahkan baris baru ke model tabel
                    }
                }
                JOptionPane.showMessageDialog(null, "Data Resep Berhasil Diimpor dari File Teks!"); // Menampilkan pesan sukses setelah data berhasil diimpor
            } catch (IOException ex) { // Menangani kesalahan jika terjadi IOException
                JOptionPane.showMessageDialog(null, "Terjadi Kesalahan: " + ex.getMessage()); // Menampilkan pesan kesalahan
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnImportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameResepMasakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameResepMasakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameResepMasakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameResepMasakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameResepMasakan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelResep;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cmbKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea txtBahan;
    private javax.swing.JTextArea txtCara;
    private javax.swing.JTextField txtDitulis;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtPorsi;
    private javax.swing.JTextField txtWaktu;
    // End of variables declaration//GEN-END:variables

    private void batal() {
        txtNama.setText(""); // Mengosongkan field txtNama
        cmbKategori.setSelectedIndex(0); // Mengatur combo box cmbKategori ke item pertama (indeks 0)
        txtBahan.setText(""); // Mengosongkan field txtBahan
        txtCara.setText(""); // Mengosongkan field txtCara
        txtWaktu.setText(""); // Mengosongkan field txtWaktu
        txtPorsi.setText(""); // Mengosongkan field txtPorsi
        txtDitulis.setText(""); // Mengosongkan field txtDitulis
        TabelResep.clearSelection(); // Menghapus seleksi pada tabel TabelResep
    }
}
